{"version":3,"sources":["app.js"],"names":["BP","ui","introElm","document","querySelector","levelsElm","levelMsg","firstElementChild","startBtn","canvas","getElementById","size","this","width","window","innerWidth","height","innerHeight","ctx","getContext","mouse","x","undefined","y","util","fadeIn","elem","ms","style","opacity","filter","display","visibility","timer","setInterval","clearInterval","fadeOut","bubblesQueue","bubble","dx","dy","radius","colors","minRadius","draw","beginPath","arc","Math","PI","fillStyle","fill","update","gamePlay","bubbleExpansionRate","maxExpansion","destroy","bubblesPoppedPerLevel","bubblesPoppedTotal","checkProgress","bubbleMultiplier","bubbleNums","bubbleQnty","i","floor","random","maxRadius","speed","r","g","b","a","push","animate","requestAnimationFrame","clearRect","length","level","start","addEventListener","event","setAttribute","removeAttribute","showHideLevelMsg","_this","color","innerHTML","delayShowLevel","setTimeout","clearTimeout","delayHideLevel","nextLevel","delayShowNext","load","init"],"mappings":"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","file":"main.min.js","sourcesContent":["var BP = {\r\n  ui: {\r\n    introElm: document.querySelector('.intro'),\r\n    levelsElm: document.querySelector('.levels'),\r\n    levelMsg: document.querySelector('.levels').firstElementChild,\r\n    startBtn: document.querySelector('.start'),\r\n    canvas: document.getElementById('canvas'),\r\n    size: function () {\r\n      this.canvas.width = window.innerWidth;\r\n      this.canvas.height = window.innerHeight;\r\n    },\r\n    ctx: document.getElementById('canvas').getContext('2d'),\r\n    mouse: {\r\n      x: undefined,\r\n      y: undefined\r\n    },\r\n  },\r\n  util: {\r\n    fadeIn: function (elem, ms) {\r\n      if (!elem)\r\n        return;\r\n\r\n      elem.style.opacity = 0;\r\n      elem.style.filter = 'alpha(opacity=0)';\r\n      elem.style.display = 'inline-block';\r\n      elem.style.visibility = 'visible';\r\n\r\n      if (ms) {\r\n        var opacity = 0;\r\n        var timer = setInterval(function () {\r\n          opacity += 50 / ms;\r\n          if (opacity >= 1) {\r\n            clearInterval(timer);\r\n            opacity = 1;\r\n          }\r\n          elem.style.opacity = opacity;\r\n          elem.style.filter = 'alpha(opacity=' + opacity * 100 + ')';\r\n        }, 50);\r\n      }\r\n      else {\r\n        elem.style.opacity = 1;\r\n        elem.style.filter = 'alpha(opacity=1)';\r\n      }\r\n    },\r\n    fadeOut: function (elem, ms) {\r\n      if (!elem)\r\n        return;\r\n\r\n      if (ms) {\r\n        var opacity = 1;\r\n        var timer = setInterval(function () {\r\n          opacity -= 50 / ms;\r\n          if (opacity <= 0) {\r\n            clearInterval(timer);\r\n            opacity = 0;\r\n            elem.style.display = 'none';\r\n            elem.style.visibility = 'hidden';\r\n          }\r\n          elem.style.opacity = opacity;\r\n          elem.style.filter = 'alpha(opacity=' + opacity * 100 + ')';\r\n        }, 50);\r\n      }\r\n      else {\r\n        elem.style.opacity = 0;\r\n        elem.style.filter = 'alpha(opacity=0)';\r\n        elem.style.display = 'none';\r\n        elem.style.visibility = 'hidden';\r\n      }\r\n    }\r\n  },\r\n  bubblesQueue: [],\r\n  bubble: function (x, y, dx, dy, radius, colors) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.radius = radius;\r\n    this.minRadius = radius;\r\n    this.colors = colors;\r\n\r\n    this.draw = function () {\r\n      BP.ui.ctx.beginPath();\r\n      // x, y, radius, Math.PI / 180 * startAngle, Math.PI / 180 * endAngle, anticlockwise\r\n      BP.ui.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n      BP.ui.ctx.fillStyle = colors;\r\n      BP.ui.ctx.fill();\r\n    };\r\n\r\n    this.update = function () {\r\n\r\n      // boundry detection\r\n      if (this.x + this.radius > innerWidth || this.x - this.radius < 0) {\r\n        this.dx = -this.dx;\r\n      }\r\n      if (this.y + this.radius > innerHeight || this.y - this.radius < 0) {\r\n        this.dy = -this.dy;\r\n      }\r\n      this.x += this.dx;\r\n      this.y += this.dy;\r\n\r\n      /* \r\n      interactivity: \r\n      positive numbers check for circles that are left or above the mouse. \r\n      negative numbers check for circles that are right or below the mouse \r\n      */\r\n      if (BP.ui.mouse.x - this.x < this.minRadius\r\n        && BP.ui.mouse.x - this.x > -this.minRadius\r\n        && BP.ui.mouse.y - this.y < this.minRadius\r\n        && BP.ui.mouse.y - this.y > -this.minRadius\r\n        && this.radius != 0) {\r\n\r\n        this.radius += BP.gamePlay.bubbleExpansionRate; // enlarge bubble\r\n        if (this.radius > BP.gamePlay.maxExpansion) {\r\n          this.destroy();\r\n        }\r\n      } else if (this.radius > this.minRadius && this.radius != 0) {\r\n        this.radius -= BP.gamePlay.bubbleExpansionRate; // shrink bubble\r\n      }\r\n\r\n      // redraw each time circle.update() is called\r\n      this.draw();\r\n    },\r\n      this.destroy = function () {\r\n        this.radius = 0;\r\n        this.x = -10;\r\n        this.y = -10;\r\n        this.dx = 0;\r\n        this.dy = 0;\r\n        BP.gamePlay.bubblesPoppedPerLevel += 1;\r\n        BP.gamePlay.bubblesPoppedTotal += 1;\r\n\r\n        // check if the last bubble was popped \r\n        BP.gamePlay.checkProgress();\r\n      };\r\n  },\r\n  bubbleMultiplier: function () {\r\n    this.bubblesQueue = [];\r\n\r\n    // on resize make a prorated amount of bubbles each level based on current progress\r\n    var bubbleNums = this.gamePlay.bubbleQnty - BP.gamePlay.bubblesPoppedPerLevel;\r\n\r\n    // random circles\r\n    for (var i = 0; i < bubbleNums; i++) {\r\n\r\n      // random circle size\r\n      var radius = Math.floor(Math.random() * BP.gamePlay.maxRadius) + 25;\r\n\r\n      var x = Math.random() * (innerWidth - radius * 2) + radius;\r\n      var y = Math.random() * (innerHeight - radius * 2) + radius;\r\n      var dx = (Math.random() - 0.5) * BP.gamePlay.speed;\r\n      var dy = (Math.random() - 0.5) * BP.gamePlay.speed;\r\n\r\n      // random RGB values\r\n      var r = Math.floor(Math.random() * 255) + 1;\r\n      var g = Math.floor(Math.random() * 255) + 1;\r\n      var b = Math.floor(Math.random() * 255) + 1;\r\n      var a = Math.random() * (1 - 0.1) + 0.1;\r\n      var colors = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\r\n\r\n      // instantiate new circles and store in array\r\n      this.bubblesQueue.push(new BP.bubble(x, y, dx, dy, radius, colors));\r\n    }\r\n  },\r\n  animate: function () {\r\n    // animate circle\r\n    requestAnimationFrame(BP.animate); // recursive callback\r\n\r\n    // clear last position\r\n    BP.ui.ctx.clearRect(0, 0, innerWidth, innerHeight);\r\n\r\n    // call circle functions \r\n    for (var i = 0; i < BP.bubblesQueue.length; i++) {\r\n      BP.bubblesQueue[i].update();\r\n    }\r\n  },\r\n  gamePlay: {\r\n    level: 1,\r\n    bubbleQnty: 50, // 50 to start as example\r\n    bubblesPoppedPerLevel: 0,\r\n    bubblesPoppedTotal: 0,\r\n    bubbleExpansionRate: 5,\r\n    speed: 8,\r\n    maxRadius: 45,\r\n    maxExpansion: 150,\r\n    start: function () {\r\n\r\n      // track mouse\r\n      BP.ui.canvas.addEventListener('mousemove', function (event) {\r\n        // get mouse position\r\n        BP.ui.mouse.x = event.x;\r\n        BP.ui.mouse.y = event.y;\r\n      });\r\n      BP.gamePlay.speed = 3; // start off for level 1\r\n      BP.gamePlay.bubbleQnty = 8; // start off for level 1\r\n      BP.ui.canvas.setAttribute('class', 'active'); // increase opacity of canvas\r\n      BP.util.fadeOut(BP.ui.introElm, 200); // fade out intro\r\n      BP.bubbleMultiplier(); // make bubbles\r\n    },\r\n    checkProgress: function () {\r\n      if (this.bubblesPoppedPerLevel === this.bubbleQnty) {\r\n        this.bubblesPoppedPerLevel = 0; // reset counter\r\n        BP.gamePlay.level += 1; // increment level\r\n        BP.ui.canvas.removeAttribute('class', 'active'); // reduce canvas opacity\r\n        this.showHideLevelMsg();\r\n      }\r\n    },\r\n    showHideLevelMsg: function () {\r\n      // random RGB values\r\n      var r = Math.floor(Math.random() * 255) + 1;\r\n      var g = Math.floor(Math.random() * 255) + 1;\r\n      var b = Math.floor(Math.random() * 255) + 1;\r\n      var color = 'color:rgba(' + r + ',' + g + ',' + b + ',1)';\r\n      BP.ui.levelMsg.setAttribute('style', color);\r\n      BP.ui.levelMsg.innerHTML = 'Level ' + BP.gamePlay.level;\r\n\r\n      var delayShowLevel = setTimeout(() => {\r\n        clearTimeout(delayShowLevel);\r\n\r\n        BP.util.fadeIn(BP.ui.levelsElm, 800); // fade in level message\r\n\r\n        var delayHideLevel = setTimeout(() => {\r\n          clearTimeout(delayHideLevel);\r\n\r\n          // fade out level message and start next level \r\n          BP.util.fadeOut(BP.ui.levelsElm, 600);\r\n          this.nextLevel();\r\n\r\n        }, 4000);\r\n      }, 200);\r\n    },\r\n    nextLevel: function () {\r\n      BP.gamePlay.speed += 0.5; // increase speed each level\r\n      //BP.gamePlay.bubbleExpansionRate += 0.5;\r\n      BP.gamePlay.bubbleQnty += 5; // increment bubbles by num for each level\r\n      if (BP.gamePlay.maxRadius + 15 < BP.gamePlay.maxExpansion) {\r\n        BP.gamePlay.maxExpansion -= 5; // reduce expansion size as game speeds up\r\n      }\r\n\r\n      var delayShowNext = setTimeout(() => {\r\n        clearTimeout(delayShowNext);\r\n\r\n        BP.bubbleMultiplier(); // make bubbles\r\n        BP.ui.canvas.setAttribute('class', 'active'); // increase canvas opacity\r\n\r\n      }, 800);\r\n    },\r\n  },\r\n  load: function () {\r\n\r\n    // start game\r\n    this.ui.startBtn.addEventListener('click', this.gamePlay.start);\r\n\r\n    // make new bubbles on resize\r\n    window.addEventListener('resize', function () {\r\n      BP.ui.canvas.width = window.innerWidth;\r\n      BP.ui.canvas.height = window.innerHeight;\r\n      if (BP.gamePlay.bubblesPoppedPerLevel != 0) {\r\n        BP.bubbleMultiplier();\r\n      }\r\n    });\r\n  },\r\n  init: function () {\r\n    this.ui.size(); // set initial size \r\n    this.bubbleMultiplier(); // make bubbles\r\n    this.animate(); // animate bubbles\r\n    this.load(); // bind event handlers\r\n  }\r\n};\r\n\r\nBP.init();"]}