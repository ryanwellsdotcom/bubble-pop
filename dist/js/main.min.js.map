{"version":3,"sources":["app.js"],"names":["BP","ui","introElm","document","querySelector","levelsElm","levelMsg","firstElementChild","startBtn","canvas","getElementById","size","this","width","window","innerWidth","height","innerHeight","ctx","getContext","mouse","x","undefined","y","util","fadeIn","elem","ms","style","opacity","filter","display","visibility","timer","setInterval","clearInterval","fadeOut","randomColorGen","Math","floor","random","bubblesQueue","bubble","dx","dy","radius","colors","minRadius","draw","beginPath","arc","PI","fillStyle","fill","update","gamePlay","bubbleExpansionRate","maxExpansion","destroy","bubblesPoppedPerLevel","bubblesPoppedTotal","checkProgress","bubbleMultiplier","bubbleNums","bubbleQnty","i","maxRadius","speed","a","push","animate","requestAnimationFrame","clearRect","length","level","start","addEventListener","event","setAttribute","removeAttribute","showHideLevelMsg","_this","color","innerHTML","delayShowLevel","setTimeout","clearTimeout","delayHideLevel","nextLevel","delayShowNext","load","init"],"mappings":"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","file":"main.min.js","sourcesContent":["var BP = {\r\n  ui: {\r\n    introElm: document.querySelector('.intro'),\r\n    levelsElm: document.querySelector('.levels'),\r\n    levelMsg: document.querySelector('.levels').firstElementChild,\r\n    startBtn: document.querySelector('.start'),\r\n    canvas: document.getElementById('canvas'),\r\n    size: function () {\r\n      this.canvas.width = window.innerWidth;\r\n      this.canvas.height = window.innerHeight;\r\n    },\r\n    ctx: document.getElementById('canvas').getContext('2d'),\r\n    mouse: {\r\n      x: undefined,\r\n      y: undefined\r\n    },\r\n  },\r\n  util: {\r\n    fadeIn: function (elem, ms) {\r\n      if (!elem)\r\n        return;\r\n\r\n      elem.style.opacity = 0;\r\n      elem.style.filter = 'alpha(opacity=0)';\r\n      elem.style.display = 'inline-block';\r\n      elem.style.visibility = 'visible';\r\n\r\n      if (ms) {\r\n        var opacity = 0;\r\n        var timer = setInterval(function () {\r\n          opacity += 50 / ms;\r\n          if (opacity >= 1) {\r\n            clearInterval(timer);\r\n            opacity = 1;\r\n          }\r\n          elem.style.opacity = opacity;\r\n          elem.style.filter = `alpha(opacity=${opacity * 100})`;\r\n        }, 50);\r\n      }\r\n      else {\r\n        elem.style.opacity = 1;\r\n        elem.style.filter = 'alpha(opacity=1)';\r\n      }\r\n    },\r\n    fadeOut: function (elem, ms) {\r\n      if (!elem)\r\n        return;\r\n\r\n      if (ms) {\r\n        var opacity = 1;\r\n        var timer = setInterval(function () {\r\n          opacity -= 50 / ms;\r\n          if (opacity <= 0) {\r\n            clearInterval(timer);\r\n            opacity = 0;\r\n            elem.style.display = 'none';\r\n            elem.style.visibility = 'hidden';\r\n          }\r\n          elem.style.opacity = opacity;\r\n          elem.style.filter = `alpha(opacity=${opacity * 100})`;\r\n        }, 50);\r\n      }\r\n      else {\r\n        elem.style.opacity = 0;\r\n        elem.style.filter = 'alpha(opacity=0)';\r\n        elem.style.display = 'none';\r\n        elem.style.visibility = 'hidden';\r\n      }\r\n    },\r\n    randomColorGen: function () {\r\n      var r = Math.floor(Math.random() * 255) + 1;\r\n      var g = Math.floor(Math.random() * 255) + 1;\r\n      var b = Math.floor(Math.random() * 255) + 1;\r\n      var color = `${r}, ${g}, ${b}`;\r\n      return color;\r\n    },\r\n  },\r\n  bubblesQueue: [],\r\n  bubble: function (x, y, dx, dy, radius, colors) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.dx = dx;\r\n    this.dy = dy;\r\n    this.radius = radius;\r\n    this.minRadius = radius;\r\n    this.colors = colors;\r\n\r\n    this.draw = function () {\r\n      BP.ui.ctx.beginPath();\r\n      // x, y, radius, Math.PI / 180 * startAngle, Math.PI / 180 * endAngle, anticlockwise\r\n      BP.ui.ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2, false);\r\n      BP.ui.ctx.fillStyle = colors;\r\n      BP.ui.ctx.fill();\r\n    };\r\n\r\n    this.update = function () {\r\n\r\n      // boundry detection\r\n      if (this.x + this.radius > innerWidth || this.x - this.radius < 0) {\r\n        this.dx = -this.dx; // move left\r\n      }\r\n      if (this.y + this.radius > innerHeight || this.y - this.radius < 0) {\r\n        this.dy = -this.dy; // move up\r\n      }\r\n      this.x += this.dx; // move right\r\n      this.y += this.dy; // move down\r\n\r\n      /* \r\n      interactivity: \r\n      positive numbers check for bubbles that are left or above the mouse. \r\n      negative numbers check for bubbles that are right or below the mouse \r\n      */\r\n      if (BP.ui.mouse.x - this.x < this.radius\r\n        && BP.ui.mouse.x - this.x > -this.radius\r\n        && BP.ui.mouse.y - this.y < this.radius\r\n        && BP.ui.mouse.y - this.y > -this.radius\r\n        && this.radius != 0) {\r\n\r\n        this.radius += BP.gamePlay.bubbleExpansionRate; // enlarge bubble\r\n        if (this.radius > BP.gamePlay.maxExpansion) {\r\n          this.destroy();\r\n        }\r\n      } else if (this.radius > this.minRadius && this.radius != 0) {\r\n        this.radius -= BP.gamePlay.bubbleExpansionRate; // shrink bubble\r\n        BP.ui.mouse.x = 0;\r\n        BP.ui.mouse.y = 0;\r\n      }\r\n\r\n      // redraw each time bubble.update() is called\r\n      this.draw();\r\n    },\r\n      this.destroy = function () {\r\n        this.radius = 0;\r\n        this.x = -10;\r\n        this.y = -10;\r\n        this.dx = 0;\r\n        this.dy = 0;\r\n        BP.gamePlay.bubblesPoppedPerLevel += 1;\r\n        BP.gamePlay.bubblesPoppedTotal += 1;\r\n\r\n        // check if the last bubble was popped \r\n        BP.gamePlay.checkProgress();\r\n      };\r\n  },\r\n  bubbleMultiplier: function () {\r\n    this.bubblesQueue = [];\r\n\r\n    // on resize make a prorated amount of bubbles each level based on current progress\r\n    var bubbleNums = this.gamePlay.bubbleQnty - BP.gamePlay.bubblesPoppedPerLevel;\r\n\r\n    // random bubbles\r\n    for (var i = 0; i < bubbleNums; i++) {\r\n\r\n      // random bubble size\r\n      var radius = Math.floor(Math.random() * BP.gamePlay.maxRadius) + 25;\r\n\r\n      var x = Math.random() * (innerWidth - radius * 2) + radius;\r\n      var y = Math.random() * (innerHeight - radius * 2) + radius;\r\n      var dx = (Math.random() - 0.5) * BP.gamePlay.speed;\r\n      var dy = (Math.random() - 0.5) * BP.gamePlay.speed;\r\n\r\n      // random opacity for each bubble\r\n      var a = Math.random() * (1 - 0.1) + 0.1;\r\n      var colors = `rgba(${BP.util.randomColorGen()} , ${a})`;\r\n\r\n      // instantiate new bubbles and store in array\r\n      this.bubblesQueue.push(new BP.bubble(x, y, dx, dy, radius, colors));\r\n    }\r\n  },\r\n  animate: function () {\r\n    // animate bubble\r\n    requestAnimationFrame(BP.animate); // recursive callback\r\n\r\n    // clear last position\r\n    BP.ui.ctx.clearRect(0, 0, innerWidth, innerHeight);\r\n\r\n    // call bubble functions \r\n    for (var i = 0; i < BP.bubblesQueue.length; i++) {\r\n      BP.bubblesQueue[i].update();\r\n    }\r\n  },\r\n  gamePlay: {\r\n    level: 1,\r\n    bubbleQnty: 50, // 50 to start as example\r\n    bubblesPoppedPerLevel: 0,\r\n    bubblesPoppedTotal: 0,\r\n    bubbleExpansionRate: 5,\r\n    speed: 8,\r\n    maxRadius: 45,\r\n    maxExpansion: 150,\r\n    start: function () {\r\n\r\n      // track mouse\r\n      BP.ui.canvas.addEventListener('mousemove', function (event) {\r\n        // get mouse position\r\n        BP.ui.mouse.x = event.x;\r\n        BP.ui.mouse.y = event.y;\r\n      }, false);\r\n\r\n      BP.gamePlay.speed = 3; // start off for level 1\r\n      BP.gamePlay.bubbleQnty = 8; // start off for level 1\r\n      BP.ui.canvas.setAttribute('class', 'active'); // increase opacity of canvas\r\n      BP.util.fadeOut(BP.ui.introElm, 200); // fade out intro\r\n      BP.bubbleMultiplier(); // make bubbles\r\n    },\r\n    checkProgress: function () {\r\n      if (this.bubblesPoppedPerLevel === this.bubbleQnty) {\r\n        this.bubblesPoppedPerLevel = 0; // reset counter\r\n        BP.gamePlay.level += 1; // increment level\r\n        BP.ui.canvas.removeAttribute('class', 'active'); // reduce canvas opacity\r\n        this.showHideLevelMsg();\r\n      }\r\n    },\r\n    showHideLevelMsg: function () {\r\n      // random RGB values\r\n      var color = `color:rgba(${BP.util.randomColorGen()} , 1)`;\r\n      BP.ui.levelMsg.setAttribute('style', color);\r\n      BP.ui.levelMsg.innerHTML = `Level ${BP.gamePlay.level}`;\r\n\r\n      var delayShowLevel = setTimeout(() => {\r\n        clearTimeout(delayShowLevel);\r\n\r\n        BP.util.fadeIn(BP.ui.levelsElm, 800); // fade in level message\r\n\r\n        var delayHideLevel = setTimeout(() => {\r\n          clearTimeout(delayHideLevel);\r\n\r\n          // fade out level message and start next level \r\n          BP.util.fadeOut(BP.ui.levelsElm, 600);\r\n          this.nextLevel();\r\n\r\n        }, 4000);\r\n      }, 200);\r\n    },\r\n    nextLevel: function () {\r\n      BP.gamePlay.speed += 0.5; // increase speed each level\r\n      //BP.gamePlay.bubbleExpansionRate += 0.5;\r\n      BP.gamePlay.bubbleQnty += 5; // increment bubbles by num for each level\r\n      if (BP.gamePlay.maxRadius + 15 < BP.gamePlay.maxExpansion) {\r\n        BP.gamePlay.maxExpansion -= 5; // reduce expansion size as game speeds up\r\n      }\r\n\r\n      var delayShowNext = setTimeout(() => {\r\n        clearTimeout(delayShowNext);\r\n\r\n        BP.bubbleMultiplier(); // make bubbles\r\n        BP.ui.canvas.setAttribute('class', 'active'); // increase canvas opacity\r\n\r\n      }, 800);\r\n    },\r\n  },\r\n  load: function () {\r\n\r\n    // start game\r\n    this.ui.startBtn.addEventListener('click', this.gamePlay.start);\r\n\r\n    // make new bubbles on resize\r\n    window.addEventListener('resize', function () {\r\n      BP.ui.canvas.width = window.innerWidth;\r\n      BP.ui.canvas.height = window.innerHeight;\r\n      if (BP.gamePlay.bubblesPoppedPerLevel != 0) {\r\n        BP.bubbleMultiplier();\r\n      }\r\n    });\r\n  },\r\n  init: function () {\r\n    this.ui.size(); // set initial size \r\n    this.bubbleMultiplier(); // make bubbles\r\n    this.animate(); // animate bubbles\r\n    this.load(); // bind event handlers\r\n  }\r\n};\r\nBP.init();"]}